import os
import tempfile
import time
import base64
import telebot
from config import (
    TELEGRAM_TOKEN, AUTOPOST_CHANNEL_ID, AUTOPOST_HOUR, AUTOPOST_MINUTE,
    CACHE_TTL, MAX_TEXT_LENGTH, RATE_LIMIT_SECONDS,
    MUSIC_KEYWORDS, MUSIC_MAX_DURATION_SEC, MUSIC_POST_DAYS, MUSIC_POST_HOUR, MUSIC_POST_MINUTE
)
import jinja2
from pparser import fetch_iccup_stats_async
import asyncio
from telebot import types
from playwright.sync_api import sync_playwright
from pparser import fetch_top_streak_player
from apscheduler.schedulers.background import BackgroundScheduler
import pytz
import html
import subprocess
from ytmusicapi import YTMusic
import random
from datetime import datetime
import re
import glob

print("–¢–µ–∫—É—â–µ–µ –≤—Ä–µ–º—è –ú–°–ö:", datetime.now(pytz.timezone('Europe/Moscow')))

jinja_env = jinja2.Environment(
    loader=jinja2.FileSystemLoader('templates'),
    autoescape=jinja2.select_autoescape(['html', 'xml'])
)

stats_cache = {}
CACHE_TTL = 60
MAX_TEXT_LENGTH = 32  # –ª–∏–º–∏—Ç —Å–∏–º–≤–æ–ª–æ–≤ –¥–ª—è –Ω–∏–∫–Ω–µ–π–º–∞ –∏ –∫–æ–º–∞–Ω–¥
RATE_LIMIT_SECONDS = 1  # –ª–∏–º–∏—Ç —á–∞—Å—Ç–æ—Ç—ã –∑–∞–ø—Ä–æ—Å–æ–≤ (—Å–µ–∫—É–Ω–¥)
user_last_request_time = {}
waiting_for_nickname = {}

def get_cached_stats(nickname):
    now = time.time()
    if nickname in stats_cache:
        cached = stats_cache[nickname]
        if now - cached['ts'] < CACHE_TTL:
            return cached['data']
    stats = asyncio.run(fetch_iccup_stats_async(nickname))
    stats_cache[nickname] = {'data': stats, 'ts': now}
    return stats

def render_stats_html(stats_data):
    template = jinja_env.get_template('index.html')
    

    try:
        with open('static/style.css', 'r', encoding='utf-8') as css_file:
            css_content = css_file.read()
    except FileNotFoundError:
        css_content = "/* CSS file not found */"
    
    def get_image_as_base64(image_path):
        """–ö–æ–Ω–≤–µ—Ä—Ç–∏—Ä—É–µ—Ç –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏–µ –≤ base64 –¥–ª—è –≤—Å—Ç—Ä–∞–∏–≤–∞–Ω–∏—è –≤ HTML"""
        try:
            with open(image_path, 'rb') as img_file:
                img_data = img_file.read()
                img_base64 = base64.b64encode(img_data).decode('utf-8')

                if image_path.lower().endswith('.png'):
                    mime_type = 'image/png'
                elif image_path.lower().endswith('.jpg') or image_path.lower().endswith('.jpeg'):
                    mime_type = 'image/jpeg'
                else:
                    mime_type = 'image/png'  
                result = f'data:{mime_type};base64,{img_base64}'
                return result
        except FileNotFoundError:
            return ''  
        except Exception as e:
            return ''
    
    def fake_url_for_static(filename):
        """–í–æ–∑–≤—Ä–∞—â–∞–µ—Ç base64 –¥–∞–Ω–Ω—ã–µ –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏—è –≤–º–µ—Å—Ç–æ –ø—É—Ç–∏"""
        image_path = f'static/{filename}'
        result = get_image_as_base64(image_path)
        return result
    
    jinja_env.globals['url_for'] = lambda endpoint, filename: fake_url_for_static(filename) if endpoint == 'static' else ''
    jinja_env.globals['inline_css'] = css_content
    
    return template.render(data=stats_data)

def take_screenshot(html_content):
    with tempfile.NamedTemporaryFile(mode='w', suffix='.html', delete=False, encoding='utf-8') as f:
        f.write(html_content)
        temp_file = f.name
    screenshot = None
    with sync_playwright() as p:
        browser = p.chromium.launch(headless=True, args=[
            '--no-sandbox',
            '--disable-dev-shm-usage',
            '--window-size=800,1200',
            '--disable-gpu',
            '--disable-web-security',
            '--allow-running-insecure-content',
        ])
        page = browser.new_page(viewport={"width": 800, "height": 1200})
        page.goto(f"file://{temp_file}")
        page.wait_for_selector('.glass', timeout=5000)
        glass_element = page.query_selector('.glass')
        screenshot = glass_element.screenshot(type='png')
        browser.close()
    os.unlink(temp_file)
    return screenshot

bot = telebot.TeleBot(TELEGRAM_TOKEN)

def main_keyboard():
    keyboard = types.ReplyKeyboardMarkup(resize_keyboard=True)
    keyboard.row('üìà –°—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞ –∏–≥—Ä–æ–∫–æ–≤', '‚ùì FAQ')
    keyboard.row('üõ† –¢–µ—Ö–Ω–∏—á–µ—Å–∫–∞—è –ø–æ–¥–¥–µ—Ä–∂–∫–∞', 'üéâ –ö–æ–Ω–∫—É—Ä—Å—ã')
    keyboard.row('–í–∞–∫–∞–Ω—Å–∏–∏', 'Beta Star Lauchner')
    keyboard.row('–ú—É–∑—ã–∫–∞–ª—å–Ω—ã–µ –ø–æ–¥–±–æ—Ä–∫–∏')
    return keyboard
def is_rate_limited(user_id):
    now = time.time()
    last_time = user_last_request_time.get(user_id, 0)
    if now - last_time < RATE_LIMIT_SECONDS:
        return True
    user_last_request_time[user_id] = now
    return False

@bot.message_handler(commands=['start', 'help'])
def send_welcome(message):
    if not message.text:
        bot.send_message(message.chat.id, "‚ùå –ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –∏—Å–ø–æ–ª—å–∑—É–π—Ç–µ —Ç–µ–∫—Å—Ç–æ–≤—ã–µ –∫–æ–º–∞–Ω–¥—ã.")
        return
    if len(message.text) > MAX_TEXT_LENGTH:
        bot.send_message(message.chat.id, f"‚ùå –°–æ–æ–±—â–µ–Ω–∏–µ —Å–ª–∏—à–∫–æ–º –¥–ª–∏–Ω–Ω–æ–µ (–º–∞–∫—Å–∏–º—É–º {MAX_TEXT_LENGTH} —Å–∏–º–≤–æ–ª–æ–≤).")
        return
    if is_rate_limited(message.from_user.id):
        bot.send_message(message.chat.id, f"‚è≥ –ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –Ω–µ –æ—Ç–ø—Ä–∞–≤–ª—è–π—Ç–µ –∫–æ–º–∞–Ω–¥—ã —Ç–∞–∫ —á–∞—Å—Ç–æ. –ü–æ–¥–æ–∂–¥–∏—Ç–µ {RATE_LIMIT_SECONDS} —Å–µ–∫—É–Ω–¥.")
        return
    bot.send_message(
        message.chat.id,
        "–ü—Ä–∏–≤–µ—Ç! –í—ã–±–µ—Ä–∏—Ç–µ –¥–µ–π—Å—Ç–≤–∏–µ:",
        reply_markup=main_keyboard()
    )

@bot.message_handler(func=lambda m: m.text == 'üìà –°—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞ –∏–≥—Ä–æ–∫–æ–≤')
def handle_stats_button(message):
    if not message.text:
        bot.send_message(message.chat.id, "‚ùå –ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –≤—ã–±–µ—Ä–∏—Ç–µ –¥–µ–π—Å—Ç–≤–∏–µ —Å –ø–æ–º–æ—â—å—é —Ç–µ–∫—Å—Ç–æ–≤–æ–π –∫–Ω–æ–ø–∫–∏.")
        return
    if len(message.text) > MAX_TEXT_LENGTH:
        bot.send_message(message.chat.id, f"‚ùå –°–æ–æ–±—â–µ–Ω–∏–µ —Å–ª–∏—à–∫–æ–º –¥–ª–∏–Ω–Ω–æ–µ (–º–∞–∫—Å–∏–º—É–º {MAX_TEXT_LENGTH} —Å–∏–º–≤–æ–ª–æ–≤).")
        return
    if is_rate_limited(message.from_user.id):
        bot.send_message(message.chat.id, f"‚è≥ –ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –Ω–µ –æ—Ç–ø—Ä–∞–≤–ª—è–π—Ç–µ –∑–∞–ø—Ä–æ—Å—ã —Ç–∞–∫ —á–∞—Å—Ç–æ. –ü–æ–¥–æ–∂–¥–∏—Ç–µ {RATE_LIMIT_SECONDS} —Å–µ–∫—É–Ω–¥.")
        return
    waiting_for_nickname[message.from_user.id] = True
    msg = bot.send_message(message.chat.id, "–í–≤–µ–¥–∏—Ç–µ –Ω–∏–∫–Ω–µ–π–º –¥–ª—è —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫–∏:")
    bot.register_next_step_handler(msg, process_stats_nickname)

def process_stats_nickname(message):
    if not waiting_for_nickname.get(message.from_user.id):
        bot.send_message(message.chat.id, "‚ùå –ü–æ–≤—Ç–æ—Ä–∏—Ç–µ –∑–∞–ø—Ä–æ—Å.")
        return
    waiting_for_nickname[message.from_user.id] = False
    if not message.text:
        bot.send_message(message.chat.id, "‚ùå –ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –æ—Ç–ø—Ä–∞–≤—å—Ç–µ –Ω–∏–∫–Ω–µ–π–º —Ç–µ–∫—Å—Ç–æ–º, –∞ –Ω–µ —Ñ–∞–π–ª–æ–º –∏–ª–∏ –¥—Ä—É–≥–∏–º —Ç–∏–ø–æ–º —Å–æ–æ–±—â–µ–Ω–∏—è.")
        return
    if len(message.text) > MAX_TEXT_LENGTH:
        bot.send_message(message.chat.id, f"‚ùå –ù–∏–∫–Ω–µ–π–º —Å–ª–∏—à–∫–æ–º –¥–ª–∏–Ω–Ω—ã–π (–º–∞–∫—Å–∏–º—É–º {MAX_TEXT_LENGTH} —Å–∏–º–≤–æ–ª–æ–≤).")
        return
    if is_rate_limited(message.from_user.id):
        bot.send_message(message.chat.id, f"‚è≥ –ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –Ω–µ –æ—Ç–ø—Ä–∞–≤–ª—è–π—Ç–µ –∑–∞–ø—Ä–æ—Å—ã —Ç–∞–∫ —á–∞—Å—Ç–æ. –ü–æ–¥–æ–∂–¥–∏—Ç–µ {RATE_LIMIT_SECONDS} —Å–µ–∫—É–Ω–¥.")
        return
    nickname = message.text.strip()
    msg = bot.send_message(message.chat.id, f"‚è≥ –ü–æ–ª—É—á–∞—é —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫—É –¥–ª—è {nickname}...")
    try:
        stats_data = get_cached_stats(nickname)
        if '–û—à–∏–±–∫–∞' in stats_data:
            bot.send_message(message.chat.id, f"‚ùå –û—à–∏–±–∫–∞: {stats_data['–û—à–∏–±–∫–∞']}")
            return
        html_content = render_stats_html(stats_data)
        screenshot_bytes = take_screenshot(html_content)
        with tempfile.NamedTemporaryFile(suffix='.png', delete=False) as tmp:
            tmp.write(screenshot_bytes)
            tmp_path = tmp.name
        with open(tmp_path, 'rb') as img_file:
            bot.send_photo(message.chat.id, img_file)
        os.remove(tmp_path)
    except Exception as e:
        bot.send_message(message.chat.id, f"‚ùå –ü—Ä–æ–∏–∑–æ—à–ª–∞ –æ—à–∏–±–∫–∞: {e}")

@bot.message_handler(func=lambda m: m.text == '‚ùì FAQ')
def handle_faq(message):
    if not message.text:
        bot.send_message(message.chat.id, "‚ùå –ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –≤—ã–±–µ—Ä–∏—Ç–µ –¥–µ–π—Å—Ç–≤–∏–µ —Å –ø–æ–º–æ—â—å—é —Ç–µ–∫—Å—Ç–æ–≤–æ–π –∫–Ω–æ–ø–∫–∏.")
        return
    if len(message.text) > MAX_TEXT_LENGTH:
        bot.send_message(message.chat.id, f"‚ùå –°–æ–æ–±—â–µ–Ω–∏–µ —Å–ª–∏—à–∫–æ–º –¥–ª–∏–Ω–Ω–æ–µ (–º–∞–∫—Å–∏–º—É–º {MAX_TEXT_LENGTH} —Å–∏–º–≤–æ–ª–æ–≤).")
        return
    if is_rate_limited(message.from_user.id):
        bot.send_message(message.chat.id, f"‚è≥ –ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –Ω–µ –æ—Ç–ø—Ä–∞–≤–ª—è–π—Ç–µ –∑–∞–ø—Ä–æ—Å—ã —Ç–∞–∫ —á–∞—Å—Ç–æ. –ü–æ–¥–æ–∂–¥–∏—Ç–µ {RATE_LIMIT_SECONDS} —Å–µ–∫—É–Ω–¥.")
        return
    with open('static/experimental.jpg', 'rb') as photo:
        bot.send_photo(message.chat.id, photo)
    bot.send_message(
        message.chat.id,
        "*–í–ê–ñ–ù–û* –ï—Å–ª–∏ —É –≤–∞—Å –ø—Ä–æ–±–ª–µ–º—ã –ø—Ä–∏ –ø–æ–¥–∫–ª—é—á–µ–Ω–∏–∏ –∫ —Å–µ—Ä–≤–µ—Ä–∞–º —Å —Ç–µ—Ä—Ä–∏—Ç–æ—Ä–∏–∏ –†–§ - —Ç–æ –≤–∞–º –Ω—É–∂–Ω–æ\n"
        "1. –ù–∞–∂–∞—Ç—å –Ω–∞ –ª—É–ø—É —Ä—è–¥–æ–º —Å –∫–Ω–æ–ø–∫–æ–π \"The Abyss\"\n"
        "2. –í—ã–±—Ä–∞—Ç—å RU3 Experimental\n"
        "–ï—Å–ª–∏ –≤–∞–º —ç—Ç–æ –Ω–µ –ø–æ–º–æ–≥–ª–æ –ø–æ–ø—Ä–æ–±—É–π—Ç–µ –∑–∞–π—Ç–∏ —Å VPN\n\n"
        "*–í–ê–ñ–ù–û* –ï—Å–ª–∏ –≤—ã –Ω–∞—à–ª–∏ –∫–∞–∫–∏–µ-—Ç–æ –±–∞–≥–∏, –∑–∞–º–µ—Ç–∏–ª–∏ —Ç–æ, —á—Ç–æ —Ä–∞–±–æ—Ç–∞–µ—Ç –ø–ª–æ—Ö–æ –∏–ª–∏ —Å–æ–≤—Å–µ–º —Å–ª–æ–º–∞–ª–æ—Å—å, –ø—Ä–∏–≥–ª–∞—à–∞–µ–º –≤–∞—Å –ø–æ–¥–µ–ª–∏—Ç—å—Å—è –º–Ω–µ–Ω–∏—è–º–∏ –∏ –∏–¥–µ—è–º–∏ –≤ –ë–∞–≥—Ç—Ä–µ–∫–µ—Ä–µ: https://iccup.com/bugtracker?\n\n"
        "Q: –ö–∞–∫ —Å–æ–∑–¥–∞—Ç—å –∞–∫–∫–∞—É–Ω—Ç –Ω–∞ iCCup?\n"
        "–û—Ç–≤–µ—Ç: <a href='https://t.me/iCCupTech/5'>–ß–∏—Ç–∞–π—Ç–µ —Ç—É—Ç</a>\n\n"
        "Q: –ö–∞–∫ –Ω–∞—á–∞—Ç—å –∏–≥—Ä–∞—Ç—å?\n"
        "–û—Ç–≤–µ—Ç: <a href='https://t.me/iCCupTech/6'>–ß–∏—Ç–∞–π—Ç–µ —Ç—É—Ç</a>\n\n"
        "Q: –ö–æ–º–∞–Ω–¥—ã —é–∑–µ—Ä–æ–≤ –Ω–∞ —Å–µ—Ä–≤–µ—Ä–µ DotA:\n"
        "–û—Ç–≤–µ—Ç: <a href='https://t.me/iCCupTech/15'>–ß–∏—Ç–∞–π—Ç–µ —Ç—É—Ç</a>\n\n"
        "Q: –ö–∞–∫ —Ä–∞–±–æ—Ç–∞–µ—Ç —Ä–µ–π—Ç–∏–Ω–≥?\n"
        "–û—Ç–≤–µ—Ç: <a href='https://t.me/iCCupTech/16'>–ß–∏—Ç–∞–π—Ç–µ —Ç—É—Ç</a>\n\n"
        "Q: –ö–∞–∫–∏–µ –µ—Å—Ç—å –ø—Ä–∞–≤–∏–ª–∞ iCCup'a?\n"
        "–û—Ç–≤–µ—Ç: <a href='https://t.me/iCCupTech/17'>–ß–∏—Ç–∞–π—Ç–µ —Ç—É—Ç</a>\n\n"
        "Q: –ö–∞–∫–∏–µ –µ—Å—Ç—å –ø–æ–ª–µ–∑–Ω—ã–µ —Å—Å—ã–ª–∫–∏?\n"
        "–û—Ç–≤–µ—Ç: <a href='https://t.me/iCCupTech/18'>–ß–∏—Ç–∞–π—Ç–µ —Ç—É—Ç</a>",
        parse_mode='HTML'
    )

@bot.message_handler(func=lambda m: m.text == 'üõ† –¢–µ—Ö–Ω–∏—á–µ—Å–∫–∞—è –ø–æ–¥–¥–µ—Ä–∂–∫–∞')
def handle_support(message):
    if not message.text:
        bot.send_message(message.chat.id, "‚ùå –ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –≤—ã–±–µ—Ä–∏—Ç–µ –¥–µ–π—Å—Ç–≤–∏–µ —Å –ø–æ–º–æ—â—å—é —Ç–µ–∫—Å—Ç–æ–≤–æ–π –∫–Ω–æ–ø–∫–∏.")
        return
    if len(message.text) > MAX_TEXT_LENGTH:
        bot.send_message(message.chat.id, f"‚ùå –°–æ–æ–±—â–µ–Ω–∏–µ —Å–ª–∏—à–∫–æ–º –¥–ª–∏–Ω–Ω–æ–µ (–º–∞–∫—Å–∏–º—É–º {MAX_TEXT_LENGTH} —Å–∏–º–≤–æ–ª–æ–≤).")
        return
    if is_rate_limited(message.from_user.id):
        bot.send_message(message.chat.id, f"‚è≥ –ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –Ω–µ –æ—Ç–ø—Ä–∞–≤–ª—è–π—Ç–µ –∑–∞–ø—Ä–æ—Å—ã —Ç–∞–∫ —á–∞—Å—Ç–æ. –ü–æ–¥–æ–∂–¥–∏—Ç–µ {RATE_LIMIT_SECONDS} —Å–µ–∫—É–Ω–¥.")
        return
    bot.send_message(
        message.chat.id,
        "–î–ª—è –ø–æ–ª—É—á–µ–Ω–∏—è –±–æ–ª–µ–µ –ø–æ–¥—Ä–æ–±–Ω–æ–π –∏ –∏–Ω–¥–∏–≤–∏–¥—É–∞–ª—å–Ω–æ–π –ø–æ–º–æ—â–∏ –æ–±—Ä–∞—â–∞–π—Ç–µ—Å—å –≤ <a href='https://iccup.com/support_user/cat_ask/35.html'>—Ä–∞–∑–¥–µ–ª –Ω–∞ —Å–∞–π—Ç–µ</a> .\n\n"
        "Q. <a href='https://t.me/iCCupTech/2'>–°—É—â–µ—Å—Ç–≤—É—é—Ç –ª–∏ –≤–µ—Ä—Å–∏–∏ –ª–∞—É–Ω—á–µ—Ä–∞ –¥–ª—è Mac OS –∏ unix?</a> .\n"
        "Q. <a href='https://t.me/iCCupTech/3'> Could not connect to Battle.Net/–ù–µ —É–¥–∞–ª–æ—Å—å —É—Å—Ç–∞–Ω–æ–≤–∏—Ç—å —Å–æ–µ–¥–∏–Ω–µ–Ω–∏–µ</a>.\n"
        "Q. <a href='https://t.me/iCCupTech/19'>Unable to Validate Game Version / –û—à–∏–±–∫–∞ –ø—Ä–∏ –ø—Ä–æ–≤–µ—Ä–∫–µ –≤–µ—Ä—Å–∏–∏ –∏–≥—Ä—ã</a>.\n"
        "Q. <a href='https://t.me/iCCupTech/20'>–ü—Ä–∏–ª–æ–∂–µ–Ω–∏–µ –Ω–µ –±—ã–ª–æ –∑–∞–ø—É—â–µ–Ω–æ, –ø–æ—Å–∫–æ–ª—å–∫—É –æ–Ω–æ –Ω–µ–∫–æ—Ä—Ä–µ–∫—Ç–Ω–æ –Ω–∞—Å—Ç—Ä–æ–µ–Ω–æ</a>.\n"
        "Q. <a href='https://t.me/iCCupTech/21'>–ù–µ –Ω–∞–π–¥–µ–Ω —Ñ–∞–π–ª iccwc3.icc</a>.\n"
        "Q. <a href='https://t.me/iCCupTech/22'>You Broke It / –ß—Ç–æ-—Ç–æ –ø–æ—à–ª–æ –Ω–µ —Ç–∞–∫</a>.\n"
        "Q. <a href='https://t.me/iCCupTech/23'>That account does not exist / –£—á—ë—Ç–Ω–æ–π –∑–∞–ø–∏—Å–∏ —Å —Ç–∞–∫–∏–º –∏–º–µ–Ω–µ–º –Ω–µ —Å—É—â–µ—Å—Ç–≤—É–µ—Ç</a>.\n"
        "Q. <a href='https://t.me/iCCupTech/24'>–ù–µ—Ç –º–µ–Ω—é –≤ –í–∞—Ä–∫—Ä–∞—Ñ—Ç–µ</a>.\n"
        "Q. <a href='https://t.me/iCCupTech/25'>–û—à–∏–±–∫–∞ ¬´Could not open game.dll¬ª</a>.\n"
        "Q. <a href='https://t.me/iCCupTech/26'>–û—à–∏–±–∫–∞ –ø—Ä–∏ –ø–æ–ø—ã—Ç–∫–µ —Å–æ—Ö—Ä–∞–Ω–µ–Ω–∏—è –¥–∞–Ω–Ω—ã—Ö, –∑–∞–≥—Ä—É–∂–µ–Ω–Ω—ã—Ö —Å Battle.Net</a>.\n"
        "Q. <a href='https://t.me/iCCupTech/27'>–ù–µ —É–¥–∞–ª–æ—Å—å –∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∏—Ä–æ–≤–∞—Ç—å DirectX</a>.\n"
        "Q. <a href='https://t.me/iCCupTech/28'>–ù–µ–≤–µ—Ä–Ω—ã–π –∫–æ–º–ø–∞–∫—Ç –¥–∏—Å–∫</a>.\n"
        "Q. <a href='https://t.me/iCCupTech/29'>–†–æ–∑–æ–≤–æ-—á—ë—Ä–Ω—ã–µ –∫–≤–∞–¥—Ä–∞—Ç—ã / –Ω–µ—Ç –∞–Ω–∏–º–∞—Ü–∏–∏ –Ω–µ–∫–æ—Ç–æ—Ä—ã—Ö —É–º–µ–Ω–∏–π</a>.\n"
        "Q. <a href='https://t.me/iCCupTech/30'>Crash it. FATAL ERROR</a>.\n"
        "Q. <a href='https://t.me/iCCupTech/31'>–ö–∞–ø—é—à–æ–Ω—ã –≤ –±–∞—Ç–ª–Ω–µ—Ç–µ</a>.\n"
        "Q. <a href='https://t.me/iCCupTech/32'>–û—à–∏–±–∫–∞ –≤–≤–æ–¥–∞ –ø–∞—Ä–æ–ª—è —Ç—Ä–∏ —Ä–∞–∑–∞ –ø–æ–¥—Ä—è–¥</a>.\n"
        "Q. <a href='https://t.me/iCCupTech/33'>–û—à–∏–±–∫–∏ —Å ACCESS VIOLATION</a>.\n"
        "Q. <a href='https://t.me/iCCupTech/34'>–ù–µ —Ä–∞–±–æ—Ç–∞—é—Ç —Ö–æ—Ç–∫–µ–∏</a>.\n",
        parse_mode='HTML'
    )

@bot.message_handler(func=lambda m: m.text == 'üéâ –ö–æ–Ω–∫—É—Ä—Å—ã')
def handle_contests(message):
    if not message.text:
        bot.send_message(message.chat.id, "‚ùå –ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –≤—ã–±–µ—Ä–∏—Ç–µ –¥–µ–π—Å—Ç–≤–∏–µ —Å –ø–æ–º–æ—â—å—é —Ç–µ–∫—Å—Ç–æ–≤–æ–π –∫–Ω–æ–ø–∫–∏.")
        return
    if len(message.text) > MAX_TEXT_LENGTH:
        bot.send_message(message.chat.id, f"‚ùå –°–æ–æ–±—â–µ–Ω–∏–µ —Å–ª–∏—à–∫–æ–º –¥–ª–∏–Ω–Ω–æ–µ (–º–∞–∫—Å–∏–º—É–º {MAX_TEXT_LENGTH} —Å–∏–º–≤–æ–ª–æ–≤).")
        return
    if is_rate_limited(message.from_user.id):
        bot.send_message(message.chat.id, f"‚è≥ –ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –Ω–µ –æ—Ç–ø—Ä–∞–≤–ª—è–π—Ç–µ –∑–∞–ø—Ä–æ—Å—ã —Ç–∞–∫ —á–∞—Å—Ç–æ. –ü–æ–¥–æ–∂–¥–∏—Ç–µ {RATE_LIMIT_SECONDS} —Å–µ–∫—É–Ω–¥.")
        return
    bot.send_message(
        message.chat.id,
        "üéÆ DISCORD:\n"
        "\n"
        "üèÜ Closed Games –í—Ç–æ—Ä–Ω–∏–∫; –ß–µ—Ç–≤–µ—Ä–≥; –°—É–±–±–æ—Ç–∞ –≤ 19:00 –ø–æ –ú–°–ö ‚è∞\n"
        "üî• –ü—Ä–∏–∑ –∑–∞ –∫–∞–∂–¥—É—é –≤—ã–∏–≥—Ä–∞–Ω–Ω—É—é –∏–≥—Ä—É 10 –∫–∞–ø—Å–æ–≤üí∞ \n"
        "‚úÖ–ü–æ–¥—Ä–æ–±–Ω–æ—Å—Ç–∏ —á–∏—Ç–∞–π—Ç–µ –≤ <a href='https://discord.com/channels/614513381600264202/890255824646176788'>–∫–∞–Ω–∞–ª–µ –¥–∏—Å–∫–æ—Ä–¥</a>\n"
        "\n"
        "‚úàTelegram:\n"
        "<a href='https://t.me/iCCup/6989'>–ê–∫—Ç—É–∞–ª—å–Ω—ã–µ –∫–æ–Ω–∫—É—Ä—Å—ã</a>\n"
        "\n"
        "üéØ FORUM –∫–æ–Ω–∫—É—Ä—Å—ã:\n"
        "–í—Å–µ –∞–∫—Ç—É–∞–ª—å–Ω—ã–µ –∫–æ–Ω–∫—É—Ä—Å—ã –º–æ–∂–µ—Ç–µ –Ω–∞–π—Ç–∏ –ø–æ <a href='https://iccup.com/community/thread/1571455.html'>—Å—Å—ã–ª–∫–µ</a>\n"
        "\n"
        "CUSTOM –∫–æ–Ω–∫—É—Ä—Å—ã\n"
        "–ü–æ–Ω–µ–¥–µ–ª—å–Ω–∏–∫ , –í—Ç–æ—Ä–Ω–∏–∫ , –ü—è—Ç–Ω–∏—Ü–∞ Custom Closed Games\n"
        "–°—Ä–µ–¥–∞ Custom Closed Wave!\n"
        "–°—É–±–±–æ—Ç–∞ Custom Closed IMBA\n"
        "–í–æ—Å–∫—Ä–µ—Å–µ–Ω—å–µ Custom Closed LOD\n"
        "–í—Ä–µ–º—è –ø—Ä–æ–≤–µ–¥–µ–Ω–∏—è: 19:00 –ø–æ –ú–°–ö\n",
        parse_mode='HTML'
    )

@bot.message_handler(func=lambda m: m.text == '–í–∞–∫–∞–Ω—Å–∏–∏')
def handle_jobs(message):
    if not message.text:
        bot.send_message(message.chat.id, "‚ùå –ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –≤—ã–±–µ—Ä–∏—Ç–µ –¥–µ–π—Å—Ç–≤–∏–µ —Å –ø–æ–º–æ—â—å—é —Ç–µ–∫—Å—Ç–æ–≤–æ–π –∫–Ω–æ–ø–∫–∏.")
        return
    if len(message.text) > MAX_TEXT_LENGTH:
        bot.send_message(message.chat.id, f"‚ùå –°–æ–æ–±—â–µ–Ω–∏–µ —Å–ª–∏—à–∫–æ–º –¥–ª–∏–Ω–Ω–æ–µ (–º–∞–∫—Å–∏–º—É–º {MAX_TEXT_LENGTH} —Å–∏–º–≤–æ–ª–æ–≤).")
        return
    if is_rate_limited(message.from_user.id):
        bot.send_message(message.chat.id, f"‚è≥ –ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –Ω–µ –æ—Ç–ø—Ä–∞–≤–ª—è–π—Ç–µ –∑–∞–ø—Ä–æ—Å—ã —Ç–∞–∫ —á–∞—Å—Ç–æ. –ü–æ–¥–æ–∂–¥–∏—Ç–µ {RATE_LIMIT_SECONDS} —Å–µ–∫—É–Ω–¥.")
        return
    bot.send_message(
        message.chat.id,
        "Social Media Marketing ‚Äî —Ä–∞–∑—Ä–∞–±–æ—Ç–∫–∞ –∏ —Ä–∞–∑–≤–∏—Ç–∏–µ –≥—Ä—É–ø–ø—ã ¬´–í–∫–æ–Ω—Ç–∞–∫—Ç–µ¬ª –∏ –Ω–∞ –∫–∞–Ω–∞–ª–µ ¬´Telegram¬ª, "
        "–ø—Ä–∏–≤–ª–µ—á–µ–Ω–∏–µ –∏ —É–¥–µ—Ä–∂–∞–Ω–∏–µ –Ω–æ–≤—ã—Ö –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π, –æ–±—â–µ–Ω–∏–µ —Å –Ω–∞—à–µ–π –∞—É–¥–∏—Ç–æ—Ä–∏–µ–π, —Å–æ–∑–¥–∞–Ω–∏–µ —É–Ω–∏–∫–∞–ª—å–Ω–æ–≥–æ "
        "–∫–æ–Ω—Ç–µ–Ω—Ç–∞ –∏ –ø—Ä–æ–≤–µ–¥–µ–Ω–∏–µ —Ç–æ–ø–æ–≤—ã—Ö —ç–≤–µ–Ω—Ç–æ–≤ —Å –Ω–∞—à–∏–º–∏ —é–∑–µ—Ä–∞–º–∏.\n\n"
        "–ó–∞—Ä–ø–ª–∞—Ç–∞ 350 –∫–∞–ø—Å–æ–≤ –≤ –º–µ—Å—è—Ü\n\n"
        "–ó–∞–∏–Ω—Ç–µ—Ä–µ—Å–æ–≤–∞–Ω—ã? <a href='https://t.me/Otsutstvie_kreativa'>–û–±—Ä–∞—â–∞–π—Ç–µ—Å—å</a>\n"
        "\n"
        "Forum Team ‚Äî –°–æ–∑–¥–∞–Ω–∏–µ –∫–∞—á–µ—Å—Ç–≤–µ–Ω–Ω–æ–≥–æ, –∫—Ä–µ–∞—Ç–∏–≤–Ω–æ–≥–æ –∫–æ–Ω—Ç–µ–Ω—Ç–∞, –º–æ–¥–µ—Ä–∞—Ü–∏—è —Ñ–æ—Ä—É–º–∞, "
        "–ø–æ–¥–¥–µ—Ä–∂–∞–Ω–∏–µ —á–∏—Å—Ç–æ—Ç—ã –∏ –ø–æ—Ä—è–¥–∫–∞, –ø–æ—Å—Ç–æ—è–Ω–Ω–æ–µ –≤–∑–∞–∏–º–æ–¥–µ–π—Å—Ç–≤–∏–µ —Å –∏–≥—Ä–æ–≤—ã–º —Å–æ–æ–±—â–µ—Å—Ç–≤–æ–º. –†–∞–±–æ—Ç–∞ "
        "—Å –∞—É–¥–∏—Ç–æ—Ä–∏–µ–π, –Ω–∞–ø—Ä–∞–≤–ª–µ–Ω–Ω–∞—è –Ω–∞ —É–ª—É—á—à–µ–Ω–∏–µ –∫–∞—á–µ—Å—Ç–≤–∞ –æ–±—â–µ–Ω–∏—è.\n"
        "–ó–∞–∏–Ω—Ç–µ—Ä–µ—Å–æ–≤–∞–Ω—ã? <a href='https://t.me/korolevaname'>–û–±—Ä–∞—â–∞–π—Ç–µ—Å—å</a>\n"
        "\n"
        "Design Team ‚Äî —Å–æ–∑–¥–∞–Ω–∏–µ –±–∞–Ω–Ω–µ—Ä–æ–≤ –¥–ª—è –Ω–æ–≤–æ—Å—Ç–µ–π, –∞ —Ç–∞–∫–∂–µ –¥—Ä—É–≥–∏—Ö —ç–ª–µ–º–µ–Ω—Ç–æ–≤ –æ—Ñ–æ—Ä–º–ª–µ–Ω–∏—è —Å–∞–π—Ç–∞.\n"
        "‚Äî –†–∞–±–æ—Ç–∞ —Å Photoshop –∏ –µ–≥–æ –∞–Ω–∞–ª–æ–≥–∞–º–∏ –Ω–∞ —Å—Ä–µ–¥–Ω–µ–º —É—Ä–æ–≤–Ω–µ –∏ –≤—ã—à–µ.\n"
        "–ó–∞–∏–Ω—Ç–µ—Ä–µ—Å–æ–≤–∞–Ω—ã? <a href='https://t.me/ula4svv'>–û–±—Ä–∞—â–∞–π—Ç–µ—Å—å</a>\n"
        "\n"
        "News ‚Äî —Å–æ–∑–¥–∞–Ω–∏–µ –Ω–æ–≤–æ—Å—Ç–Ω–æ–≥–æ –º–∏—Ä–∞ –ø–ª–∞—Ç—Ñ–æ—Ä–º—ã: –∫—Ä–∞—Å–∏–≤—ã–π —Å–ª–æ–≥; –∞–±—Å–æ–ª—é—Ç–Ω–æ–µ –∑–Ω–∞–Ω–∏–µ —Ä—É—Å—Å–∫–æ–≥–æ —è–∑—ã–∫–∞. "
        "–ò–¥—É—Ç –ø–æ–∏—Å–∫–∏ —è—Ä–∫–∏—Ö –∏ –Ω–µ–æ—Ä–¥–∏–Ω–∞—Ä–Ω—ã—Ö –∏–Ω–¥–∏–≤–∏–¥–æ–≤, –∫–æ—Ç–æ—Ä—ã–µ –±—É–¥—É—Ç —Å–ø–æ—Å–æ–±–Ω—ã –Ω–µ—É—Å—Ç–∞–Ω–Ω–æ —Ä–∞–±–æ—Ç–∞—Ç—å –∏ —Ö–æ—Ä–æ—à–æ –∑–∞—Ä–∞–±–∞—Ç—ã–≤–∞—Ç—å.\n"
        "–ó–∞–∏–Ω—Ç–µ—Ä–µ—Å–æ–≤–∞–Ω—ã? <a href='https://t.me/ula4svv'>–û–±—Ä–∞—â–∞–π—Ç–µ—Å—å</a>\n"
        "\n"
        "Custom Maps Vacancy\n"
        "iCCup Custom League Team ‚Äî –û—Ä–≥–∞–Ω–∏–∑–∞—Ü–∏—è, —Å–æ–∑–¥–∞–Ω–∏–µ –∏ –ø—Ä–æ–≤–µ–¥–µ–Ω–∏–µ —Ç—É—Ä–Ω–∏—Ä–æ–≤\n"
        "Custom Tournaments Team ‚Äî –ü—Ä–æ–≤–µ–¥–µ–Ω–∏–µ —Ç—É—Ä–Ω–∏—Ä–æ–≤ Custom —Å–µ–∫—Ü–∏–∏\n"
        "Custom Arena Team ‚Äî –ù–∞—á–∏—Å–ª–µ–Ω–∏–µ –æ—á–∫–æ–≤ pts —É—á–∞—Å—Ç–Ω–∏–∫–∞–º –∞—Ä–µ–Ω—ã\n"
        "Closed Games Team ‚Äî –ó–Ω–∞–Ω–∏–µ –∫–∞—Ä—Ç –∏–∑ —Å–ø–∏—Å–∫–∞ /chost. –í–∞—à–µ–π –∑–∞–¥–∞—á–µ–π –±—É–¥–µ—Ç –ø—Ä–æ–≤–µ–¥–µ–Ω–∏–µ –∑–∞–∫—Ä—ã—Ç—ã—Ö –∏–≥—Ä –¥–ª—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π\n"
        "Custom Forum Team ‚Äî –ü–æ—Ä—è–¥–æ–∫ –Ω—É–∂–µ–Ω –≤–µ–∑–¥–µ, –≤ –æ—Å–æ–±–µ–Ω–Ω–æ—Å—Ç–∏, –Ω–∞ —Ñ–æ—Ä—É–º–µ\n"
        "–ó–∞–∏–Ω—Ç–µ—Ä–µ—Å–æ–≤–∞–Ω—ã? <a href='https://iccup.com/job_custom_forum'>–ú—ã –∂–¥–µ–º –≤–∞—Å!</a>\n",
        parse_mode='HTML'
    )

@bot.message_handler(func=lambda m: m.text == 'Beta Star Lauchner')
def handle_beta(message):
    with open('static/launcher.png', 'rb') as photo:
        bot.send_photo(message.chat.id, photo)

    description = (
        "–≠—Ç–æ –ø—É–±–ª–∏—á–Ω–∞—è –ë–ï–¢–ê –≤–µ—Ä—Å–∏—è –Ω–æ–≤–æ–≥–æ iCCup Star Launcher-a, —Å –ø–æ–º–æ—â—å—é –∫–æ—Ç–æ—Ä–æ–≥–æ –≤—ã –º–æ–∂–µ—Ç–µ –≤–æ–π—Ç–∏ –≤ —Å–≤–æ–π –∞–∫–∫–∞—É–Ω—Ç, "
        "–ø–æ–¥–∫–ª—é—á–∏—Ç—å—Å—è –∫ —Å–µ—Ä–≤–µ—Ä—É, –æ–±—â–∞—Ç—å—Å—è —Å –¥—Ä—É–∑—å—è–º–∏ –≤ –ø—Ä–æ–¥–≤–∏–Ω—É—Ç–æ–π –≤–µ—Ä—Å–∏–∏ —á–∞—Ç–∞, –∏—Å–∫–∞—Ç—å –∏–≥—Ä—ã —Å –º–Ω–æ–∂–µ—Å—Ç–≤–æ–º —Ñ–∏–ª—å—Ç—Ä–æ–≤. "
        "–ò –∫–æ–Ω–µ—á–Ω–æ –∂–µ, –≤—ã –º–æ–∂–µ—Ç–µ —Å–æ–∑–¥–∞—Ç—å –∏–ª–∏ –∑–∞–π—Ç–∏ –≤ –∏–≥—Ä–æ–≤–æ–µ –ª–æ–±–±–∏ —Ç–æ–ª—å–∫–æ —Å –ø–æ–º–æ—â—å—é –Ω–æ–≤–æ–≥–æ –ª–∞—É–Ω—á–µ—Ä–∞.\n\n"
        "Warcraft 3 –∑–∞–ø—É—Å–∫–∞–µ—Ç—Å—è —Ç–æ–ª—å–∫–æ –≤ –º–æ–º–µ–Ω—Ç –∑–∞–≥—Ä—É–∑–∫–∏ —Å–∞–º–æ–π –∏–≥—Ä—ã. –ë–ª–∞–≥–æ–¥–∞—Ä—è —ç—Ç–æ–º—É –º—ã –Ω–∞–∫–æ–Ω–µ—Ü-—Ç–æ –º–æ–∂–µ–º –æ–±–Ω–æ–≤–∏—Ç—å –∏ "
        "—É–ª—É—á—à–∏—Ç—å –∏–Ω—Ç–µ—Ä—Ñ–µ–π—Å Warcraft-–∞, –¥–æ–±–∞–≤–∏—Ç—å –Ω–æ–≤—ã–µ —ç–ª–µ–º–µ–Ω—Ç—ã, –∏—Å–ø—Ä–∞–≤–∏—Ç—å —Å—Ç–∞—Ä—ã–µ –±–∞–≥–∏ –∏ –æ–±–æ–π—Ç–∏ –æ–≥—Ä–∞–Ω–∏—á–µ–Ω–∏—è, —Å –∫–æ—Ç–æ—Ä—ã–º–∏ "
        "–ø—Ä–∏—Ö–æ–¥–∏–ª–æ—Å—å –±–æ—Ä–æ—Ç—å—Å—è –¥–æ —Å–∏—Ö –ø–æ—Ä.\n\n"
        "‚ùó <b>–í–ê–ñ–ù–û:</b> –≠—Ç–æ –ø—É–±–ª–∏—á–Ω–∞—è, –Ω–æ –ë–ï–¢–ê –≤–µ—Ä—Å–∏—è –ª–∞—É–Ω—á–µ—Ä–∞. –í –Ω—ë–º –µ—Å—Ç—å –±–∞–≥–∏, –∫–∞–∫–∏—Ö-—Ç–æ —ç–ª–µ–º–µ–Ω—Ç–æ–≤ –º–æ–∂–µ—Ç –Ω–µ —Ö–≤–∞—Ç–∞—Ç—å, "
        "–∫–∞–∫–∏–µ-—Ç–æ —Ñ—É–Ω–∫—Ü–∏–∏ –º–æ–≥—É—Ç —Ä–∞–±–æ—Ç–∞—Ç—å –Ω–µ–ø—Ä–∞–≤–∏–ª—å–Ω–æ. –≠—Ç–æ –Ω–æ—Ä–º–∞–ª—å–Ω–∞—è —á–∞—Å—Ç—å –ø—Ä–æ—Ü–µ—Å—Å–∞ —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏—è. "
        "–ù–æ–≤–∞—è –≤–µ—Ä—Å–∏—è –ª–∞—É–Ω—á–µ—Ä–∞ –ø–æ—Å—Ç–æ—è–Ω–Ω–æ –æ–±–Ω–æ–≤–ª—è–µ—Ç—Å—è, –∏–∑–º–µ–Ω—è–µ—Ç—Å—è –∏ –¥–æ—Ä–∞–±–∞—Ç—ã–≤–∞–µ—Ç—Å—è.\n\n"
        "–ï—Å–ª–∏ –≤—ã –Ω–∞—à–ª–∏ –±–∞–≥–∏ –∏–ª–∏ —Ö–æ—Ç–∏—Ç–µ –ø–æ–¥–µ–ª–∏—Ç—å—Å—è –∏–¥–µ—è–º–∏ ‚Äî –ø–∏—à–∏—Ç–µ –≤ –ë–∞–≥—Ç—Ä–µ–∫–µ—Ä (—Ä–∞–∑–¥–µ–ª –õ–∞—É–Ω—á–µ—Ä):\n"
        "https://iccup.com/bugtracker?type=launcher\n\n"
        "‚Äá‚Äá‚Äá‚Äá‚Äá‚Äá‚Äá‚Äá‚Äá‚Äá‚Äá‚Äá‚Äá‚Äá‚Äá‚Äá‚Äá‚Äá‚Äá‚Äá‚Äá‚Äá-------------------------\n"
        "‚Äá‚Äá‚Äá‚Äá‚Äá‚Äá‚Äá‚Äá‚Äá‚Äá‚Äá‚Äá‚Äá‚Äá‚Äá‚Äá‚Äá‚Äá‚Äá‚Äá‚Äá‚Äá<b><a href='https://iccup.com/files/download/3600ecf6b55f9e10d5f707c1134f0f1a/iCCup_BETA_Star_Launcher.html'>-‚Äá‚Äá–£—Å—Ç–∞–Ω–æ–≤–∏—Ç—å‚Äá‚Äá-</a></b>\n"
        "‚Äá‚Äá‚Äá‚Äá‚Äá‚Äá‚Äá‚Äá‚Äá‚Äá‚Äá‚Äá‚Äá‚Äá‚Äá‚Äá‚Äá‚Äá‚Äá‚Äá‚Äá‚Äá-------------------------\n\n"
        "‚ö†Ô∏è <b>–í–ù–ò–ú–ê–ù–ò–ï: –ù–µ –Ω–∞–∂–∏–º–∞–π—Ç–µ —Å –º–æ–±–∏–ª—å–Ω—ã—Ö —É—Å—Ç—Ä–æ–π—Å—Ç–≤!</b>"
    )

    bot.send_message(message.chat.id, description, parse_mode='HTML')


@bot.message_handler(commands=['stats'])
def stats_command(message):
    if is_rate_limited(message.from_user.id):
        bot.send_message(message.chat.id, f"‚è≥ –ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –Ω–µ –æ—Ç–ø—Ä–∞–≤–ª—è–π—Ç–µ –∑–∞–ø—Ä–æ—Å—ã —Ç–∞–∫ —á–∞—Å—Ç–æ. –ü–æ–¥–æ–∂–¥–∏—Ç–µ {RATE_LIMIT_SECONDS} —Å–µ–∫—É–Ω–¥.")
        return
    args = message.text.split(maxsplit=1)
    if len(args) < 2 or not args[1].strip():
        bot.send_message(message.chat.id, "‚ùå –ü–æ–∂–∞–ª—É–π—Å—Ç–∞, —É–∫–∞–∂–∏—Ç–µ –Ω–∏–∫–Ω–µ–π–º –ø–æ—Å–ª–µ –∫–æ–º–∞–Ω–¥—ã, –Ω–∞–ø—Ä–∏–º–µ—Ä: /stats nickname")
        return
    nickname = args[1].strip()
    if len(nickname) > MAX_TEXT_LENGTH:
        bot.send_message(message.chat.id, f"‚ùå –ù–∏–∫–Ω–µ–π–º —Å–ª–∏—à–∫–æ–º –¥–ª–∏–Ω–Ω—ã–π (–º–∞–∫—Å–∏–º—É–º {MAX_TEXT_LENGTH} —Å–∏–º–≤–æ–ª–æ–≤).")
        return
    msg = bot.send_message(message.chat.id, f"‚è≥ –ü–æ–ª—É—á–∞—é —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫—É –¥–ª—è {nickname}...")
    try:
        stats_data = get_cached_stats(nickname)
        if '–û—à–∏–±–∫–∞' in stats_data:
            bot.send_message(message.chat.id, f"‚ùå –û—à–∏–±–∫–∞: {stats_data['–û—à–∏–±–∫–∞']}")
            return
        html_content = render_stats_html(stats_data)
        screenshot_bytes = take_screenshot(html_content)
        with tempfile.NamedTemporaryFile(suffix='.png', delete=False) as tmp:
            tmp.write(screenshot_bytes)
            tmp_path = tmp.name
        with open(tmp_path, 'rb') as img_file:
            bot.send_photo(message.chat.id, img_file)
        os.remove(tmp_path)
    except Exception as e:
        bot.send_message(message.chat.id, f"‚ùå –ü—Ä–æ–∏–∑–æ—à–ª–∞ –æ—à–∏–±–∫–∞: {e}")

@bot.message_handler(func=lambda m: m.text in ['‚ùì FAQ', 'üõ† –¢–µ—Ö–Ω–∏—á–µ—Å–∫–∞—è –ø–æ–¥–¥–µ—Ä–∂–∫–∞', 'üéâ –ö–æ–Ω–∫—É—Ä—Å—ã', '–í–∞–∫–∞–Ω—Å–∏–∏', 'üöÄ BETA STAR LAUNCHER', 'Beta Star Lauchner'])
def reset_context_on_other_buttons(message):
    waiting_for_nickname[message.from_user.id] = False
    if message.text == '‚ùì FAQ':
        handle_faq(message)
    elif message.text == 'üõ† –¢–µ—Ö–Ω–∏—á–µ—Å–∫–∞—è –ø–æ–¥–¥–µ—Ä–∂–∫–∞':
        handle_support(message)
    elif message.text == 'üéâ –ö–æ–Ω–∫—É—Ä—Å—ã':
        handle_contests(message)
    elif message.text == '–í–∞–∫–∞–Ω—Å–∏–∏':
        handle_jobs(message)
    elif message.text == 'üöÄ BETA STAR LAUNCHER' or message.text == 'Beta Star Lauchner':
        handle_beta(message)

@bot.message_handler(content_types=['new_chat_members'])
def greet_new_members(message):
    for new_member in message.new_chat_members:
        bot.send_message(
            message.chat.id,
            f"–ü—Ä–∏–≤–µ—Ç, {new_member.first_name}! –î–æ–±—Ä–æ –ø–æ–∂–∞–ª–æ–≤–∞—Ç—å! –í—ã–±–µ—Ä–∏—Ç–µ –¥–µ–π—Å—Ç–≤–∏–µ:",
            reply_markup=main_keyboard()
        )

def auto_post_top_streak():
    try:
        moscow_tz = pytz.timezone('Europe/Moscow')
        current_time = datetime.now(moscow_tz)
        
        # –ü–æ–ª—É—á–∞–µ–º –Ω–∏–∫ –ø–µ—Ä–≤–æ–≥–æ –∏–≥—Ä–æ–∫–∞
        nickname = fetch_top_streak_player()
        if not nickname:
            return
        # –ü–æ–ª—É—á–∞–µ–º —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫—É –∏–≥—Ä–æ–∫–∞
        stats_data = get_cached_stats(nickname)
        if '–û—à–∏–±–∫–∞' in stats_data:
            return
        html_content = render_stats_html(stats_data)
        screenshot_bytes = take_screenshot(html_content)
        # ID –∫–∞–Ω–∞–ª–∞/—á–∞—Ç–∞ –¥–ª—è –ø—É–±–ª–∏–∫–∞—Ü–∏–∏ –∏–∑ –∫–æ–Ω—Ñ–∏–≥–∞
        nickname_safe = html.escape(nickname)
        caption = (
        f"üî•üî•–ò–ì–†–û–ö –î–ù–Øüî•üî•\n\n"
        f"–ö–∞–∂–¥—ã–π –¥–µ–Ω—å –∫—Ç–æ-—Ç–æ –ø–æ–¥–Ω–∏–º–∞–µ—Ç—Å—è –≤—ã—à–µ –æ—Å—Ç–∞–ª—å–Ω—ã—Ö. –°–µ–≥–æ–¥–Ω—è - —ç—Ç–æ "
        f"<a href=\"https://iccup.com/dota/gamingprofile/{nickname_safe}\">{nickname_safe}</a>.\n"
        "–ï–≥–æ –ø—É—Ç—å –±—ã–ª –±–µ–∑–æ—à–∏–±–æ—á–µ–Ω: –º–∞—Ç—á –∑–∞ –º–∞—Ç—á–µ–º, –ø–æ–±–µ–¥–∞ –∑–∞ –ø–æ–±–µ–¥–æ–π.\n"
        "–ë–µ–∑ –ª–∏—à–Ω–∏—Ö —Å–ª–æ–≤ - —Å–µ–≥–æ–¥–Ω—è –∏–º–µ–Ω–Ω–æ –æ–Ω –¥–µ—Ä–∂–∏—Ç —Å–∞–º—É—é –¥–ª–∏–Ω–Ω—É—é —Å–µ—Ä–∏—é –ø–æ–±–µ–¥ –Ω–∞ –ø–ª–∞—Ç—Ñ–æ—Ä–º–µ.\n"
        "–≠—Ç–æ –Ω–µ —Å–ª—É—á–∞–π–Ω–æ—Å—Ç—å –∏ –Ω–µ –≤–µ–∑–µ–Ω–∏–µ - —ç—Ç–æ —Å—Ç–∞–±–∏–ª—å–Ω–æ—Å—Ç—å, –æ–ø—ã—Ç –∏ —Ö–æ–ª–æ–¥–Ω—ã–π —Ä–∞–∑—É–º.\n"
        "–ü–æ–∑–¥—Ä–∞–≤–ª—è–µ–º –∏ –≥—Ä–∞—Ü—É–µ–º!\n"
        "–ü–æ—Å—Ç —Å–æ–∑–¥–∞–Ω–æ –∞–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∏–π\n"
        "#–ò–≥—Ä–æ–∫–¥–Ω—è  #iCCup"
        )
        with tempfile.NamedTemporaryFile(suffix='.png', delete=False) as tmp:
            tmp.write(screenshot_bytes)
            tmp_path = tmp.name
        with open(tmp_path, 'rb') as img_file:
            bot.send_photo(AUTOPOST_CHANNEL_ID, img_file, caption=caption, parse_mode="HTML")
        os.remove(tmp_path)
    except Exception as e:
        pass

def auto_post_music():
    print("auto_post_music: –∑–∞–ø—É—Å–∫ –∑–∞–¥–∞—á–∏")
    try:
        ytmusic = YTMusic()
        print("auto_post_music: YTMusic –∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∏—Ä–æ–≤–∞–Ω")
        keywords = [
            "Dota music", "Epic gaming music", "Dark fantasy soundtrack",
            "Anime battle music", "Underground rap gaming",
            "Dota 2 playlist", "Instrumental action music",
            "Slavic gaming music", "Warcraft music",
            "Tryhard playlist",
            "phonk gaming",
            "trap instrumental",
            "drill type beat",
            "chill rap",
            "dubstep gaming",
            "synthwave gamer",
            "nu metal",
            "lofi gaming",
            "hardstyle gaming",
            "dota soundtrack"
        ]
        search_query = random.choice(keywords)
        print(f"auto_post_music: –ø–æ–∏—Å–∫–æ–≤—ã–π –∑–∞–ø—Ä–æ—Å: {search_query}")
        results = ytmusic.search(search_query, filter='songs')
        print(f"auto_post_music: –Ω–∞–π–¥–µ–Ω–æ {len(results)} —Ç—Ä–µ–∫–æ–≤")
        if not results:
            print("auto_post_music: –Ω–µ—Ç —Ä–µ–∑—É–ª—å—Ç–∞—Ç–æ–≤")
            return
        top_tracks = results[:10] if len(results) >= 10 else results
        max_duration_sec = 300 
        filtered_tracks = []
        for t in top_tracks:
            duration_str = t.get('duration')
            if duration_str:
                parts = duration_str.split(':')
                try:
                    if len(parts) == 3:
                        seconds = int(parts[0]) * 3600 + int(parts[1]) * 60 + int(parts[2])
                    elif len(parts) == 2:
                        seconds = int(parts[0]) * 60 + int(parts[1])
                    else:
                        seconds = int(parts[0])
                except Exception:
                    continue
                if seconds <= max_duration_sec:
                    filtered_tracks.append(t)
        if not filtered_tracks:
            print("auto_post_music: –Ω–µ—Ç –ø–æ–¥—Ö–æ–¥—è—â–∏—Ö —Ç—Ä–µ–∫–æ–≤ –ø–æ –¥–ª–∏—Ç–µ–ª—å–Ω–æ—Å—Ç–∏")
            return
        track = random.choice(filtered_tracks)
        print(f"auto_post_music: –≤—ã–±—Ä–∞–Ω —Ç—Ä–µ–∫ {track.get('title')}")
        video_id = track.get('videoId')
        if not video_id:
            print("auto_post_music: –Ω–µ—Ç videoId")
            return
        url = f"https://music.youtube.com/watch?v={video_id}"

        safe_title = re.sub(r'[\\/*?:"<>|#]', "", track['title'])
        output_template = f"{safe_title}.%(ext)s"
        print(f"auto_post_music: —Å–∫–∞—á–∏–≤–∞–Ω–∏–µ {url} –≤ —à–∞–±–ª–æ–Ω {output_template}")
        subprocess.run([
            'yt-dlp',
            '-f', 'bestaudio[ext=m4a]/bestaudio',
            '-o', output_template,
            url
        ], check=True)

        files = glob.glob(f"{safe_title}*.m4a")
        if not files:
            print("auto_post_music: –∞—É–¥–∏–æ—Ñ–∞–π–ª –Ω–µ –Ω–∞–π–¥–µ–Ω –ø–æ—Å–ª–µ —Å–∫–∞—á–∏–≤–∞–Ω–∏—è")
            return
        output_file = files[0]
        print(f"auto_post_music: –æ—Ç–ø—Ä–∞–≤–∫–∞ –∞—É–¥–∏–æ {output_file} –≤ –∫–∞–Ω–∞–ª {AUTOPOST_CHANNEL_ID}")
        try:
            with open(output_file, 'rb') as audio:
                caption = (
                    f"{track['title']} ‚Äî {track['artists'][0]['name']}" if track.get('artists') else track['title']
                ) + "\n\n–ú—É–∑—ã–∫–∞ –¥–Ω—è.\n–°–ª—É—à–∞–µ–º –∏ —Ç–∞—â–∏–º –∫–∞—Ç–∫–∏ \n –ü–æ—Å—Ç —Å–æ–∑–¥–∞–Ω–æ –∞–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∏–π\n\n#Music || #iccup"
                bot.send_audio(AUTOPOST_CHANNEL_ID, audio, caption=caption)
            print("auto_post_music: –∞—É–¥–∏–æ –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω–æ —É—Å–ø–µ—à–Ω–æ")
        except Exception as e:
            print(f'–û—à–∏–±–∫–∞ –æ—Ç–ø—Ä–∞–≤–∫–∏ –∞—É–¥–∏–æ: {e}')
        for f in files:
            if os.path.exists(f):
                os.remove(f)
    except Exception as e:
        print(f'–û—à–∏–±–∫–∞ –∞–≤—Ç–æ–ø–æ—Å—Ç–∏–Ω–≥–∞ –º—É–∑—ã–∫–∏: {e}')


scheduler = BackgroundScheduler(timezone=pytz.timezone('Europe/Moscow'))
scheduler.add_job(auto_post_top_streak, 'cron', hour=AUTOPOST_HOUR, minute=AUTOPOST_MINUTE)
scheduler.add_job(auto_post_music, 'cron', day_of_week=MUSIC_POST_DAYS, hour=MUSIC_POST_HOUR, minute=MUSIC_POST_MINUTE)
scheduler.start()
print(f"–ü–ª–∞–Ω–∏—Ä–æ–≤—â–∏–∫ –∑–∞–ø—É—â–µ–Ω. –ú—É–∑—ã–∫–∞ –±—É–¥–µ—Ç –ø—É–±–ª–∏–∫–æ–≤–∞—Ç—å—Å—è –ø–æ {MUSIC_POST_DAYS} –≤ {MUSIC_POST_HOUR:02d}:{MUSIC_POST_MINUTE:02d} –ú–°–ö")

if __name__ == "__main__":
    bot.polling(none_stop=True) 
